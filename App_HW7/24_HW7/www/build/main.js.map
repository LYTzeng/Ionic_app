{"version":3,"sources":["../../src/services/messageService.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/member/memberList.ts","../../src/pages/member/memberDetail.ts","../../src/pages/performance/performanceList.ts","../../src/pages/performance/performanceDetail.ts","../../src/pages/message/contactList.ts","../../src/pages/setting/setting.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/services/firestoreService.ts","../../src/app/environment.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core'\r\nimport { Headers, Http, Response } from '@angular/http'\r\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore'\r\n//import * as uuid from 'uuid'\r\n\r\n//import { SQLite, SQLiteObject } from '@ionic-native/sqlite'\r\n\r\nimport { Observable } from 'rxjs'\r\nimport 'rxjs/add/operator/toPromise'\r\n\r\nimport { Admin, ChatMessage } from '../angularModel'\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n    private url = \"http://us-central1-midterm-104820003.cloudfunctions.net/\"\r\n    private adminCollection: AngularFirestoreCollection<Admin>\r\n\r\n    constructor(private database: AngularFirestore, private http: Http /*, private sqlite: SQLite*/) {\r\n        this.adminCollection = database.collection<Admin>(\"Admin\")\r\n        //this.getSQLiteDB()\r\n    }\r\n\r\n    getLatestPost(): Observable<ChatMessage> {\r\n        const postCollection = this.database.collection<ChatMessage>(\"Post\", ref => ref.orderBy(\"timestamp\", \"desc\").limit(1))\r\n        return postCollection.valueChanges().map(messages => messages[0])\r\n    }\r\n\r\n    /*\r\n    getChatMessageByAccount(account: string): Observable<ChatMessage[]> {\r\n        return this.adminCollection.doc(account).collection<ChatMessage>(\"chatMessages\").valueChanges() //valueChanges([\"added\"])\r\n    }\r\n\r\n    deleteChatMessage(account: string, messageId: string): Promise<void> {\r\n        return this.adminCollection.doc(account).collection<ChatMessage>(\"chatMessages\").doc(messageId).delete()\r\n    }\r\n\r\n    async publishChatMessage(chatMessage: ChatMessage): Promise<any> {\r\n        return this.http.post(this.url + \"/publishChatTopic\", chatMessage).toPromise()\r\n    }\r\n    */\r\n    async publishPostMessage(chatMessage: ChatMessage): Promise<any> {\r\n        this.http.post(this.url + \"/publishPostTopic\", chatMessage).toPromise()\r\n\r\n    }\r\n\r\n    /*\r\n    async getSQLiteDB(): Promise<SQLiteObject> {\r\n        const sqliteDB = await this.sqlite.create({\r\n            name: \"MESSAGE.RECORD.db\",\r\n            location: \"default\"\r\n        })\r\n        await sqliteDB.executeSql(\"CREATE TABLE IF NOT EXISTS Message (id VARCHAR UNIQUE, sender VARCHAR, receiver VARCHAR, message VARCHAR, timestamp INTEGER)\", [])\r\n        return Promise.resolve(sqliteDB)\r\n    }\r\n\r\n    async insertChatMessageToSQLiteDB(chatMessage: ChatMessage): Promise<void> {\r\n        const sqliteDB = await this.getSQLiteDB()\r\n        console.log(JSON.stringify(chatMessage, null, 4))\r\n        return sqliteDB.executeSql(\"INSERT OR IGNORE INTO Message(id, sender, receiver, message, timestamp) VALUES(?, ?, ?, ?, ?)\", [chatMessage.id, chatMessage.sender, chatMessage.receiver, chatMessage.message, chatMessage.timestamp])\r\n    }\r\n\r\n    async getChatMessageFromSQLiteDB(myAccount: string, chatAccount: string): Promise<ChatMessage[]> {\r\n        const sqliteDB = await this.getSQLiteDB()\r\n        const values = await sqliteDB.executeSql(\"SELECT * FROM Message WHERE (sender = ? AND receiver = ?) OR (sender = ? AND receiver = ?) ORDER BY timestamp ASC\", [myAccount, chatAccount, chatAccount, myAccount])\r\n        const chatMessages = new Array<ChatMessage>()\r\n        for (let index = 0; index < values.rows.length; index++)\r\n            chatMessages.push(values.rows.item(index))\r\n        return chatMessages\r\n    }\r\n*/\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/messageService.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 125;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 125\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 169;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 169\n// module chunks = 0","import { Component } from '@angular/core'\n\nimport { MemberListController } from '../member/memberList'\nimport { PerformanceListController } from '../performance/performanceList'\nimport { ContactListController } from '../message/contactList'\nimport { SettingController } from '../setting/setting'\n\n@Component({\n    templateUrl: 'tabs.html'\n})\nexport class TabsController {\n\n    memberListPage = MemberListController\n    performanceListPage = PerformanceListController\n    contactListPage = ContactListController\n    settingPage = SettingController\n\n    constructor() { }\n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component, OnDestroy } from '@angular/core'\nimport { AngularFireAuth } from 'angularfire2/auth'\nimport { MemberDetailController } from '../member/memberDetail'\n\nimport { FirestoreService } from '../../services/firestoreService'\nimport { User } from '../../angularModel'\nimport { Subscription } from 'rxjs'\n\n@Component({\n    selector: 'page-memberList',\n    templateUrl: 'memberList.html'\n})\nexport class MemberListController {\n    memberDetailPage: any = MemberDetailController\n\n    logged: Boolean = false\n    usersSubscription: Subscription\n    users = new Array<User>()\n\n    constructor(private firestoreService: FirestoreService, private angularfireAuth: AngularFireAuth) {\n        angularfireAuth.authState.subscribe(firebaseUser => {\n            this.logged = !!firebaseUser\n            if (this.logged)\n                this.usersSubscription = firestoreService.getUsers().subscribe(users => this.users = users)\n            else\n                this.ngOnDestroy()\n        })\n    }\n\n    ngOnDestroy() {\n        if (this.usersSubscription)\n            this.usersSubscription.unsubscribe()\n        this.users = []\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/member/memberList.ts","import { Component, OnDestroy } from '@angular/core'\nimport { NavController, NavParams, AlertController } from 'ionic-angular'\nimport { AngularFireAuth } from 'angularfire2/auth'\n\nimport { FirestoreService } from '../../services/firestoreService'\nimport { User, Admin } from '../../angularModel'\nimport { Subscription } from 'rxjs'\n\n@Component({\n    selector: 'page-member-detail',\n    templateUrl: 'memberDetail.html',\n})\nexport class MemberDetailController implements OnDestroy{\n    logged: Boolean = false\n    adminSubscription: Subscription\n    userSubscription: Subscription\n    admin: Admin = null\n    user: User = null\n\n    mode: string = \"view\" // 一般模式view或是更改模式modify\n\n    constructor(private navCtrl: NavController, private navParams: NavParams, private alertCtrl: AlertController, private firestoreService: FirestoreService, private angularfireAuth: AngularFireAuth) {\n        const lineId = navParams.data as string\n        angularfireAuth.authState.subscribe(firebaseUser => {\n            this.logged = !!firebaseUser\n            if (this.logged) {\n                this.adminSubscription = firestoreService.getAdminByAccount(firebaseUser.uid).subscribe(admin => this.admin = admin)\n                this.userSubscription = firestoreService.getUserByLineId(lineId).subscribe(user => this.user = user)\n            }\n            else {\n                this.ngOnDestroy()\n                navCtrl.pop()\n            }\n        })\n    }\n\n    changeProfile(user: User, name: string, email: string) {\n        this.alertCtrl.create({\n            title: \"變更資料\",\n            message: \"確認送出？\",\n            buttons: [\n                {\n                    text: \"送出\",\n                    handler: () => {\n                        if (name != undefined)\n                            user.member.name = name\n                        if (email != undefined)\n                            user.member.email = email\n                        this.firestoreService.changeProfile(user)\n                        this.toggleMode(\"view\")\n                    }\n                },\n                {\n                    text: \"取消\",\n                    role: \"cancel\",\n                    handler: () => {\n                        this.toggleMode(\"view\")\n                    }\n                }\n            ]\n        }).present()\n    }\n\n    toggleMode(mode: string) {\n        this.mode = mode\n    }\n\n    ngOnDestroy() {\n        if (this.adminSubscription)\n            this.adminSubscription.unsubscribe()\n        if (this.userSubscription)\n            this.userSubscription.unsubscribe()\n        this.admin = null\n        this.user = null\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/member/memberDetail.ts","import { Component, OnDestroy } from '@angular/core'\nimport { AngularFireAuth } from 'angularfire2/auth'\nimport { PerformanceDetailController } from './performanceDetail'\n\nimport { FirestoreService } from '../../services/firestoreService'\nimport { User } from '../../angularModel'\n\nimport { Subscription } from 'rxjs'\n\n@Component({\n    selector: 'page-performanceList',\n    templateUrl: 'performanceList.html',\n})\nexport class PerformanceListController implements OnDestroy{\n    performanceDetailPage: any = PerformanceDetailController\n\n    logged: Boolean = false\n    usersSubscription: Subscription\n    users = new Array<User>()\n\n    constructor(private firestoreService: FirestoreService, private angularfireAuth: AngularFireAuth) {\n        angularfireAuth.authState.subscribe(firebaseUser => {\n            this.logged = !!firebaseUser\n            if (this.logged)\n                this.usersSubscription = this.firestoreService.getUsers().subscribe(users => this.users = users)\n            else\n                this.ngOnDestroy()\n        })\n    }\n\n    ngOnDestroy() {\n        if (this.usersSubscription)\n            this.usersSubscription.unsubscribe()\n        this.users = []\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/performance/performanceList.ts","import { Component, OnDestroy } from '@angular/core'\nimport { NavController, NavParams, AlertController } from 'ionic-angular'\nimport { Subscription } from 'rxjs'\nimport { AngularFireAuth } from 'angularfire2/auth'\n\nimport { FirestoreService } from '../../services/firestoreService'\nimport { User, Admin } from '../../angularModel'\n\n@Component({\n    selector: 'page-performance-detail',\n    templateUrl: 'performanceDetail.html',\n})\nexport class PerformanceDetailController implements OnDestroy{\n    logged: Boolean = false\n\n    adminSubscription: Subscription\n    userSubscription: Subscription\n    admin: Admin = null\n    user: User = null\n\n    constructor(private navCtrl: NavController, private navParams: NavParams, private alertCtrl: AlertController, private firestoreService: FirestoreService, private angularfireAuth: AngularFireAuth) {\n        const lineId = navParams.data as string\n        angularfireAuth.authState.subscribe(firebaseUser => {\n            this.logged = !!firebaseUser\n            if (this.logged) {\n                this.adminSubscription = firestoreService.getAdminByAccount(firebaseUser.uid).subscribe(admin => this.admin = admin)\n                this.userSubscription = this.firestoreService.getUserByLineId(lineId).subscribe(user => this.user = user)\n            } else {\n                this.ngOnDestroy()\n                navCtrl.pop()\n            }\n        })\n    }\n\n    isValid(value: string): Boolean {\n        const regx = /^[0-9]*$/\n        return regx.test(value)\n    }\n\n    ngOnDestroy() {\n        if (this.adminSubscription)\n            this.adminSubscription.unsubscribe()\n        if (this.userSubscription)\n            this.userSubscription.unsubscribe()\n        this.admin = null\n        this.user = null\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/performance/performanceDetail.ts","import { Component, OnDestroy } from '@angular/core'\nimport { AlertController } from 'ionic-angular'\nimport { App } from 'ionic-angular'\nimport { AngularFireAuth } from 'angularfire2/auth'\nimport * as uuid from 'uuid'\n\nimport { FirestoreService } from '../../services/firestoreService'\nimport { MessageService } from '../../services/messageService'\n\nimport { Admin, ChatMessage } from '../../angularModel'\nimport { Subscription } from 'rxjs'\n\n@Component({\n    selector: 'page-contactList',\n    templateUrl: 'contactList.html',\n})\nexport class ContactListController implements OnDestroy {\n    logged: Boolean = false\n    adminSubscription: Subscription\n    admin: Admin = null\n\n    adminsSubscription: Subscription\n    admins: Admin[] = []\n\n    postMessage: string = \"您好！\"\n\n    constructor(private appCtrl: App, private firebaseService: FirestoreService, private messageService: MessageService, private angularfireAuth: AngularFireAuth, private alertCtrl: AlertController) {\n        angularfireAuth.authState.subscribe(firebaseUser => {\n            this.logged = !!firebaseUser\n            if (this.logged) {\n                this.adminSubscription = firebaseService.getAdminByAccount(firebaseUser.uid).subscribe(admin => this.admin = admin)\n                this.adminsSubscription = firebaseService.getAdmins().subscribe(admins => {\n                    this.admins = admins.filter(admin => {\n                        return admin.account !== firebaseUser.uid //&& admin.member.fcmToken\n                    })\n                })\n            } else\n                this.ngOnDestroy()\n        })\n    }\n\n    async sendPostMessage() {\n        if (this.postMessage !== \"\") {\n            const postMessage = {\n                sender: this.admin.account,\n                message: this.postMessage\n            }\n            this.messageService.publishPostMessage(postMessage)\n            this.postMessage = \"\"\n            this.alertCtrl.create({\n                title: \"公告\",\n                message: \"公告已發送\",\n                buttons: [{ text: \"確認\" }]\n            }).present()\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.adminSubscription)\n            this.adminSubscription.unsubscribe()\n        this.admin = null\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/message/contactList.ts","import { Component, OnDestroy } from '@angular/core'\nimport { ToastController, AlertController } from 'ionic-angular'\nimport { AngularFireAuth } from 'angularfire2/auth'\n\nimport { FirestoreService } from '../../services/firestoreService'\nimport { MessageService } from '../../services/messageService'\n\nimport { ChatMessage, Admin } from '../../angularModel'\nimport { Subscription } from 'rxjs'\n\n@Component({\n    selector: 'page-setting',\n    templateUrl: 'setting.html',\n})\nexport class SettingController implements OnDestroy {\n    logged: Boolean = false\n    adminSubscription: Subscription\n    admin: Admin = null\n\n    postSubscription: Subscription\n    postMessage: ChatMessage = null\n\n    errorMessage: string = \"\"\n\n    constructor(private firebaseService: FirestoreService, private messageService: MessageService, private angularfireAuth: AngularFireAuth, private toastCtrl: ToastController, private alertCtrl: AlertController) {\n        angularfireAuth.authState.subscribe(firebaseUser => {\n            this.logged = !!firebaseUser\n            if (this.logged) {\n                this.adminSubscription = firebaseService.getAdminByAccount(firebaseUser.uid).subscribe(admin => this.admin = admin)\n                this.postSubscription = messageService.getLatestPost().subscribe(postMessage => this.postMessage = postMessage)\n            } else\n                this.ngOnDestroy()\n        })\n    }\n\n    signIn(account: string, password: string) {\n        this.angularfireAuth.auth.signInWithEmailAndPassword(account, password)\n            .then(() => this.errorMessage = \"\")\n            .catch(() => {\n                this.errorMessage = \"密碼不正確，請重新登入\"\n            })\n    }\n\n    async resetPassword() {\n        await this.angularfireAuth.auth.sendPasswordResetEmail(this.admin.account)\n        this.alertCtrl.create({\n            title: \"修改密碼\",\n            message: \"重設密碼信件，已發送至信箱，請查看\",\n            buttons: [{ text: \"確認\" }]\n        }).present()\n    }\n\n    signOut() {\n        this.angularfireAuth.auth.signOut()\n    }\n\n    ngOnDestroy() {\n        if (this.adminSubscription)\n            this.adminSubscription.unsubscribe()\n        if (this.postSubscription)\n            this.postSubscription.unsubscribe()\n        this.admin = null\n        this.postMessage = null\n        this.errorMessage = \"\"\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/setting/setting.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular'\nimport { HttpModule } from '@angular/http'\nimport { IonicStorageModule } from '@ionic/storage'\nimport { MyApp } from './app.component'\n\nimport { AngularFireModule } from 'angularfire2'\nimport { AngularFirestoreModule } from 'angularfire2/firestore'\nimport { AngularFireAuth } from 'angularfire2/auth'\n\nimport { TabsController } from '../pages/tabs/tabs'\nimport { MemberListController } from '../pages/member/memberList'\nimport { MemberDetailController } from '../pages/member/memberDetail'\nimport { PerformanceListController } from '../pages/performance/performanceList'\nimport { PerformanceDetailController } from '../pages/performance/performanceDetail'\nimport { ContactListController } from '../pages/message/contactList'\nimport { SettingController } from '../pages/setting/setting'\n\nimport { FirestoreService } from '../services/firestoreService'\nimport { MessageService } from '../services/messageService'\n\nimport { StatusBar } from '@ionic-native/status-bar'\nimport { SplashScreen } from '@ionic-native/splash-screen'\n\nimport * as environment from './environment'\n\n@NgModule({\n    declarations: [\n        MyApp,\n        TabsController,\n        MemberListController,\n        MemberDetailController,\n        PerformanceListController,\n        PerformanceDetailController,\n        ContactListController,\n        SettingController,\n    ],\n    imports: [\n        BrowserModule,\n        IonicModule.forRoot(MyApp),\n        IonicStorageModule.forRoot({\n            name: '__mydb',\n            driverOrder: ['indexeddb', 'sqlite', 'websql']\n        }),\n        HttpModule,\n        AngularFireModule.initializeApp(environment.firebaseConfig),\n        AngularFirestoreModule\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MyApp,\n        TabsController,\n        MemberListController,\n        MemberDetailController,\n        PerformanceListController,\n        PerformanceDetailController,\n        ContactListController,\n        SettingController\n    ],\n    providers: [\n        StatusBar,\n        SplashScreen,\n        { provide: ErrorHandler, useClass: IonicErrorHandler },\n        AngularFireAuth,\n        FirestoreService,\n        MessageService\n    ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnDestroy } from '@angular/core'\nimport { Platform } from 'ionic-angular'\nimport { StatusBar } from '@ionic-native/status-bar'\nimport { SplashScreen } from '@ionic-native/splash-screen'\n\nimport { TabsController } from '../pages/tabs/tabs'\n\nimport { AngularFireAuth } from 'angularfire2/auth'\n//import { FCM } from '@ionic-native/fcm'\n\nimport { FirestoreService } from '../services/firestoreService'\nimport { Subscription } from 'rxjs'\n\n\n@Component({\n    templateUrl: 'app.html'\n})\nexport class MyApp implements OnDestroy{\n    rootPage: any = TabsController\n\n    adminSubscription: Subscription\n\n    constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, private firestoreService: FirestoreService, private angularfireAuth: AngularFireAuth) {\n        platform.ready().then(() => {\n            statusBar.styleDefault()\n            splashScreen.hide()\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.adminSubscription)\n            this.adminSubscription.unsubscribe()\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core'\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore'\nimport { Observable } from 'rxjs'\nimport 'rxjs/add/operator/toPromise'\n\nimport { User, Admin } from '../angularModel'\n\n@Injectable()\nexport class FirestoreService {\n    private userCollection: AngularFirestoreCollection<User>\n    private adminCollection: AngularFirestoreCollection<Admin>\n\n    constructor(private database: AngularFirestore) {\n        this.userCollection = this.database.collection<User>(\"User\", ref => ref.orderBy(\"performance.rank\", \"asc\"))\n        this.adminCollection = database.collection<Admin>(\"Admin\")\n    }\n\n    getUsers(): Observable<User[]> {\n        return this.userCollection.valueChanges()\n    }\n\n    getUserByLineId(lineId: string): Observable<User> {\n        return this.userCollection.doc<User>(lineId).valueChanges()\n    }\n\n    changeProfile(user: User): Promise<void> {\n        return this.userCollection.doc<User>(user.lineId).update({\n            member: user.member\n        })\n    }\n    \n    /*\n    setFcmToken(admin: Admin): Promise<void> {\n        return this.adminCollection.doc<Admin>(admin.account).update({\n            member: admin.member\n        })\n    }*/\n\n    getAdmins(): Observable<Admin[]> {\n        return this.adminCollection.valueChanges()\n    }\n\n    getAdminByAccount(account: string): Observable<Admin> {\n        return this.adminCollection.doc<Admin>(account).valueChanges()\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/firestoreService.ts","/*\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyC0WHsCyjBxLPH7-HzCQOVs7KOJUQI8XCo\",\n    authDomain: \"apps2018-104820003.firebaseapp.com\",\n    databaseURL: \"https://apps2018-104820003.firebaseio.com\",\n    projectId: \"apps2018-104820003\",\n    storageBucket: \"apps2018-104820003.appspot.com\",\n    messagingSenderId: \"44272689722\"\n}\n*/\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyBvAieUv5z-fh6VDVyoT-kCzX3rINBVMEk\",\n    authDomain: \"midterm-104820003.firebaseapp.com\",\n    databaseURL: \"https://midterm-104820003.firebaseio.com\",\n    projectId: \"midterm-104820003\",\n    storageBucket: \"midterm-104820003.appspot.com\",\n    messagingSenderId: \"583555422665\"\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/environment.ts"],"sourceRoot":""}